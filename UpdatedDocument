Lazy Loading
	One of the biggest problems with most mobile websites is loading videos that the user may not intend to watch. With making and hosting videos even easier, especially through websites such as YouTube, more websites are adding videos to their pages. Just loading these videos on a mobile device wastes usersâ€™ wireless data. This problem occurs because when the thumbnail, the image showing a frame of the video, is loaded, the video still has to load some of itself to generate the image.
	Using a high cohesion design and a jQuery plugin, this image can be generated easier and stop most of the video from being loaded until the video is clicked on by the user. This plugin takes advantage of the high cohesion by letting the website just supply the space for the video, while the video itself loads in all of its data when it is requested to, as opposed to the website loading all aspects of the video upon load.

Asynchronous Page Loading
	When designing the pages for the website, a low coupling pattern was implemented. To lower overhead and reduce using cellular data, one page is loaded with an area that loads in other pages that change the content. These pages are changed using the slide out menu on the side of the main page using a controller pattern to handle the user input.
	This system is set up using Asynchronous Javascript and XML (AJAX). The static content of the page, that is the menu, header, sidebar, and footer, are requested from the server when the user first arrives at the site. After that, AJAX is used to load in the main content sections when the user clicks a link in the menu or any other link that is internal to the site, without ever needing to reload the whole page. The forward and back browser functionality is preserved via the HTML5 history API via a Javascript library called Sammy, so even though the user is technically only interacting with a single-page, they can navigate the same way as on a traditional website.
	In the old MATLAB Marina website, each page had to have a PHP include function for each of the header, footer, and sidebar. Our design takes away the need to include segments of the page with PHP. Instead, these segments are in a "master" page, which has a section into which individual page content is loaded as described above. Now, each page is a pure HTML snippet that is loaded in to a larger HTML page by the controller.

Page Orientation Changes
	One of the requirements given was to allow the MATLAB Marina website to be accessible on desktop browsers and mobile browsers. Following the information expert and low coupling patterns, we decided to handle having different versions of the website by changing its appearance based on the width of the browser. This allows everyone to access the site from the same web address and avoid loading different versions. This helps users save time and data usage.
	The change in the website is achieved using Javascript to check the width of the browser and alter the HTML elements with different CSS. The browser version of the website includes a link menu on the left side of the page to access other pages of the site easily. The mobile version of the website changes the menu into a button that when pressed, has a menu slide into view that shows the links to the other pages of the website. Additionally, the background and overall style of the website is different between both versions, as well as font size changing dynamically with the width.
